{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = exports.createMatcher = void 0;\n\nvar _jestMatcherUtils = require('jest-matcher-utils');\n\nvar _jestMessageUtil = require('jest-message-util');\n\nvar _print = require('./print');\n\nvar _utils = require('./utils');\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable local/ban-types-eventually */\n\n\nvar DID_NOT_THROW = 'Received function did not throw';\n\nvar getThrown = function getThrown(e) {\n  var hasMessage = e !== null && e !== undefined && typeof e.message === 'string';\n\n  if (hasMessage && typeof e.name === 'string' && typeof e.stack === 'string') {\n    return {\n      hasMessage: hasMessage,\n      isError: true,\n      message: e.message,\n      value: e\n    };\n  }\n\n  return {\n    hasMessage: hasMessage,\n    isError: false,\n    message: hasMessage ? e.message : String(e),\n    value: e\n  };\n};\n\nvar createMatcher = function createMatcher(matcherName, fromPromise) {\n  return function (received, expected) {\n    var options = {\n      isNot: this.isNot,\n      promise: this.promise\n    };\n    var thrown = null;\n\n    if (fromPromise && (0, _utils.isError)(received)) {\n      thrown = getThrown(received);\n    } else {\n      if (typeof received !== 'function') {\n        if (!fromPromise) {\n          var placeholder = expected === undefined ? '' : 'expected';\n          throw new Error((0, _jestMatcherUtils.matcherErrorMessage)((0, _jestMatcherUtils.matcherHint)(matcherName, undefined, placeholder, options), \"\".concat((0, _jestMatcherUtils.RECEIVED_COLOR)('received'), \" value must be a function\"), (0, _jestMatcherUtils.printWithType)('Received', received, _jestMatcherUtils.printReceived)));\n        }\n      } else {\n        try {\n          received();\n        } catch (e) {\n          thrown = getThrown(e);\n        }\n      }\n    }\n\n    if (expected === undefined) {\n      return toThrow(matcherName, options, thrown);\n    } else if (typeof expected === 'function') {\n      return toThrowExpectedClass(matcherName, options, thrown, expected);\n    } else if (typeof expected === 'string') {\n      return toThrowExpectedString(matcherName, options, thrown, expected);\n    } else if (expected !== null && typeof expected.test === 'function') {\n      return toThrowExpectedRegExp(matcherName, options, thrown, expected);\n    } else if (expected !== null && typeof expected.asymmetricMatch === 'function') {\n      return toThrowExpectedAsymmetric(matcherName, options, thrown, expected);\n    } else if (expected !== null && typeof expected === 'object') {\n      return toThrowExpectedObject(matcherName, options, thrown, expected);\n    } else {\n      throw new Error((0, _jestMatcherUtils.matcherErrorMessage)((0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options), \"\".concat((0, _jestMatcherUtils.EXPECTED_COLOR)('expected'), \" value must be a string or regular expression or class or error\"), (0, _jestMatcherUtils.printWithType)('Expected', expected, _jestMatcherUtils.printExpected)));\n    }\n  };\n};\n\nexports.createMatcher = createMatcher;\nvar matchers = {\n  toThrow: createMatcher('toThrow'),\n  toThrowError: createMatcher('toThrowError')\n};\n\nvar toThrowExpectedRegExp = function toThrowExpectedRegExp(matcherName, options, thrown, expected) {\n  var pass = thrown !== null && expected.test(thrown.message);\n  var message = pass ? function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected pattern: not ', expected) + (thrown !== null && thrown.hasMessage ? formatReceived('Received message:     ', thrown, 'message', expected) + formatStack(thrown) : formatReceived('Received value:       ', thrown, 'value'));\n  } : function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected pattern: ', expected) + (thrown === null ? '\\n' + DID_NOT_THROW : thrown.hasMessage ? formatReceived('Received message: ', thrown, 'message') + formatStack(thrown) : formatReceived('Received value:   ', thrown, 'value'));\n  };\n  return {\n    message: message,\n    pass: pass\n  };\n};\n\nvar toThrowExpectedAsymmetric = function toThrowExpectedAsymmetric(matcherName, options, thrown, expected) {\n  var pass = thrown !== null && expected.asymmetricMatch(thrown.value);\n  var message = pass ? function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected asymmetric matcher: not ', expected) + '\\n' + (thrown !== null && thrown.hasMessage ? formatReceived('Received name:    ', thrown, 'name') + formatReceived('Received message: ', thrown, 'message') + formatStack(thrown) : formatReceived('Thrown value: ', thrown, 'value'));\n  } : function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected asymmetric matcher: ', expected) + '\\n' + (thrown === null ? DID_NOT_THROW : thrown.hasMessage ? formatReceived('Received name:    ', thrown, 'name') + formatReceived('Received message: ', thrown, 'message') + formatStack(thrown) : formatReceived('Thrown value: ', thrown, 'value'));\n  };\n  return {\n    message: message,\n    pass: pass\n  };\n};\n\nvar toThrowExpectedObject = function toThrowExpectedObject(matcherName, options, thrown, expected) {\n  var pass = thrown !== null && thrown.message === expected.message;\n  var message = pass ? function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected message: not ', expected.message) + (thrown !== null && thrown.hasMessage ? formatStack(thrown) : formatReceived('Received value:       ', thrown, 'value'));\n  } : function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + (thrown === null ? formatExpected('Expected message: ', expected.message) + '\\n' + DID_NOT_THROW : thrown.hasMessage ? (0, _jestMatcherUtils.printDiffOrStringify)(expected.message, thrown.message, 'Expected message', 'Received message', true) + '\\n' + formatStack(thrown) : formatExpected('Expected message: ', expected.message) + formatReceived('Received value:   ', thrown, 'value'));\n  };\n  return {\n    message: message,\n    pass: pass\n  };\n};\n\nvar toThrowExpectedClass = function toThrowExpectedClass(matcherName, options, thrown, expected) {\n  var pass = thrown !== null && thrown.value instanceof expected;\n  var message = pass ? function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + (0, _print.printExpectedConstructorNameNot)('Expected constructor', expected) + (thrown !== null && thrown.value != null && typeof thrown.value.constructor === 'function' && thrown.value.constructor !== expected ? (0, _print.printReceivedConstructorNameNot)('Received constructor', thrown.value.constructor, expected) : '') + '\\n' + (thrown !== null && thrown.hasMessage ? formatReceived('Received message: ', thrown, 'message') + formatStack(thrown) : formatReceived('Received value: ', thrown, 'value'));\n  } : function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + (0, _print.printExpectedConstructorName)('Expected constructor', expected) + (thrown === null ? '\\n' + DID_NOT_THROW : (thrown.value != null && typeof thrown.value.constructor === 'function' ? (0, _print.printReceivedConstructorName)('Received constructor', thrown.value.constructor) : '') + '\\n' + (thrown.hasMessage ? formatReceived('Received message: ', thrown, 'message') + formatStack(thrown) : formatReceived('Received value: ', thrown, 'value')));\n  };\n  return {\n    message: message,\n    pass: pass\n  };\n};\n\nvar toThrowExpectedString = function toThrowExpectedString(matcherName, options, thrown, expected) {\n  var pass = thrown !== null && thrown.message.includes(expected);\n  var message = pass ? function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected substring: not ', expected) + (thrown !== null && thrown.hasMessage ? formatReceived('Received message:       ', thrown, 'message', expected) + formatStack(thrown) : formatReceived('Received value:         ', thrown, 'value'));\n  } : function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, undefined, options) + '\\n\\n' + formatExpected('Expected substring: ', expected) + (thrown === null ? '\\n' + DID_NOT_THROW : thrown.hasMessage ? formatReceived('Received message:   ', thrown, 'message') + formatStack(thrown) : formatReceived('Received value:     ', thrown, 'value'));\n  };\n  return {\n    message: message,\n    pass: pass\n  };\n};\n\nvar toThrow = function toThrow(matcherName, options, thrown) {\n  var pass = thrown !== null;\n  var message = pass ? function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, '', options) + '\\n\\n' + (thrown !== null && thrown.hasMessage ? formatReceived('Error name:    ', thrown, 'name') + formatReceived('Error message: ', thrown, 'message') + formatStack(thrown) : formatReceived('Thrown value: ', thrown, 'value'));\n  } : function () {\n    return (0, _jestMatcherUtils.matcherHint)(matcherName, undefined, '', options) + '\\n\\n' + DID_NOT_THROW;\n  };\n  return {\n    message: message,\n    pass: pass\n  };\n};\n\nvar formatExpected = function formatExpected(label, expected) {\n  return label + (0, _jestMatcherUtils.printExpected)(expected) + '\\n';\n};\n\nvar formatReceived = function formatReceived(label, thrown, key, expected) {\n  if (thrown === null) {\n    return '';\n  }\n\n  if (key === 'message') {\n    var message = thrown.message;\n\n    if (typeof expected === 'string') {\n      var index = message.indexOf(expected);\n\n      if (index !== -1) {\n        return label + (0, _print.printReceivedStringContainExpectedSubstring)(message, index, expected.length) + '\\n';\n      }\n    } else if (expected instanceof RegExp) {\n      return label + (0, _print.printReceivedStringContainExpectedResult)(message, typeof expected.exec === 'function' ? expected.exec(message) : null) + '\\n';\n    }\n\n    return label + (0, _jestMatcherUtils.printReceived)(message) + '\\n';\n  }\n\n  if (key === 'name') {\n    return thrown.isError ? label + (0, _jestMatcherUtils.printReceived)(thrown.value.name) + '\\n' : '';\n  }\n\n  if (key === 'value') {\n    return thrown.isError ? '' : label + (0, _jestMatcherUtils.printReceived)(thrown.value) + '\\n';\n  }\n\n  return '';\n};\n\nvar formatStack = function formatStack(thrown) {\n  return thrown === null || !thrown.isError ? '' : (0, _jestMessageUtil.formatStackTrace)((0, _jestMessageUtil.separateMessageFromStack)(thrown.value.stack).stack, {\n    rootDir: process.cwd(),\n    testMatch: []\n  }, {\n    noStackTrace: false\n  });\n};\n\nvar _default = matchers;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sudesh/Documents/DEV2021/wacode/discovery-components-web/node_modules/ibm-cloud-sdk-core/node_modules/expect/build/toThrowMatchers.js"],"names":["Object","defineProperty","exports","value","default","createMatcher","_jestMatcherUtils","require","_jestMessageUtil","_print","_utils","DID_NOT_THROW","getThrown","e","hasMessage","undefined","message","name","stack","isError","String","matcherName","fromPromise","received","expected","options","isNot","promise","thrown","placeholder","Error","matcherErrorMessage","matcherHint","RECEIVED_COLOR","printWithType","printReceived","toThrow","toThrowExpectedClass","toThrowExpectedString","test","toThrowExpectedRegExp","asymmetricMatch","toThrowExpectedAsymmetric","toThrowExpectedObject","EXPECTED_COLOR","printExpected","matchers","toThrowError","pass","formatExpected","formatReceived","formatStack","printDiffOrStringify","printExpectedConstructorNameNot","constructor","printReceivedConstructorNameNot","printExpectedConstructorName","printReceivedConstructorName","includes","label","key","index","indexOf","printReceivedStringContainExpectedSubstring","length","RegExp","printReceivedStringContainExpectedResult","exec","formatStackTrace","separateMessageFromStack","rootDir","process","cwd","testMatch","noStackTrace","_default"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBF,OAAO,CAACG,aAAR,GAAwB,KAAK,CAA/C;;AAEA,IAAIC,iBAAiB,GAAGC,OAAO,CAAC,oBAAD,CAA/B;;AAEA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,mBAAD,CAA9B;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AACA,IAAMI,aAAa,GAAG,iCAAtB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,CAAC,EAAI;AACrB,MAAMC,UAAU,GACdD,CAAC,KAAK,IAAN,IAAcA,CAAC,KAAKE,SAApB,IAAiC,OAAOF,CAAC,CAACG,OAAT,KAAqB,QADxD;;AAGA,MAAIF,UAAU,IAAI,OAAOD,CAAC,CAACI,IAAT,KAAkB,QAAhC,IAA4C,OAAOJ,CAAC,CAACK,KAAT,KAAmB,QAAnE,EAA6E;AAC3E,WAAO;AACLJ,MAAAA,UAAU,EAAVA,UADK;AAELK,MAAAA,OAAO,EAAE,IAFJ;AAGLH,MAAAA,OAAO,EAAEH,CAAC,CAACG,OAHN;AAILb,MAAAA,KAAK,EAAEU;AAJF,KAAP;AAMD;;AAED,SAAO;AACLC,IAAAA,UAAU,EAAVA,UADK;AAELK,IAAAA,OAAO,EAAE,KAFJ;AAGLH,IAAAA,OAAO,EAAEF,UAAU,GAAGD,CAAC,CAACG,OAAL,GAAeI,MAAM,CAACP,CAAD,CAHnC;AAILV,IAAAA,KAAK,EAAEU;AAJF,GAAP;AAMD,CAnBD;;AAqBA,IAAMR,aAAa,GAAG,SAAhBA,aAAgB,CAACgB,WAAD,EAAcC,WAAd;AAAA,SACpB,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAC5B,QAAMC,OAAO,GAAG;AACdC,MAAAA,KAAK,EAAE,KAAKA,KADE;AAEdC,MAAAA,OAAO,EAAE,KAAKA;AAFA,KAAhB;AAIA,QAAIC,MAAM,GAAG,IAAb;;AAEA,QAAIN,WAAW,IAAI,CAAC,GAAGZ,MAAM,CAACS,OAAX,EAAoBI,QAApB,CAAnB,EAAkD;AAChDK,MAAAA,MAAM,GAAGhB,SAAS,CAACW,QAAD,CAAlB;AACD,KAFD,MAEO;AACL,UAAI,OAAOA,QAAP,KAAoB,UAAxB,EAAoC;AAClC,YAAI,CAACD,WAAL,EAAkB;AAChB,cAAMO,WAAW,GAAGL,QAAQ,KAAKT,SAAb,GAAyB,EAAzB,GAA8B,UAAlD;AACA,gBAAM,IAAIe,KAAJ,CACJ,CAAC,GAAGxB,iBAAiB,CAACyB,mBAAtB,EACE,CAAC,GAAGzB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEc,WAHF,EAIEJ,OAJF,CADF,YAOK,CAAC,GAAGnB,iBAAiB,CAAC2B,cAAtB,EACD,UADC,CAPL,gCAUE,CAAC,GAAG3B,iBAAiB,CAAC4B,aAAtB,EACE,UADF,EAEEX,QAFF,EAGEjB,iBAAiB,CAAC6B,aAHpB,CAVF,CADI,CAAN;AAkBD;AACF,OAtBD,MAsBO;AACL,YAAI;AACFZ,UAAAA,QAAQ;AACT,SAFD,CAEE,OAAOV,CAAP,EAAU;AACVe,UAAAA,MAAM,GAAGhB,SAAS,CAACC,CAAD,CAAlB;AACD;AACF;AACF;;AAED,QAAIW,QAAQ,KAAKT,SAAjB,EAA4B;AAC1B,aAAOqB,OAAO,CAACf,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,CAAd;AACD,KAFD,MAEO,IAAI,OAAOJ,QAAP,KAAoB,UAAxB,EAAoC;AACzC,aAAOa,oBAAoB,CAAChB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,CAA3B;AACD,KAFM,MAEA,IAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AACvC,aAAOc,qBAAqB,CAACjB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,CAA5B;AACD,KAFM,MAEA,IAAIA,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAQ,CAACe,IAAhB,KAAyB,UAAlD,EAA8D;AACnE,aAAOC,qBAAqB,CAACnB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,CAA5B;AACD,KAFM,MAEA,IACLA,QAAQ,KAAK,IAAb,IACA,OAAOA,QAAQ,CAACiB,eAAhB,KAAoC,UAF/B,EAGL;AACA,aAAOC,yBAAyB,CAACrB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,CAAhC;AACD,KALM,MAKA,IAAIA,QAAQ,KAAK,IAAb,IAAqB,OAAOA,QAAP,KAAoB,QAA7C,EAAuD;AAC5D,aAAOmB,qBAAqB,CAACtB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,CAA5B;AACD,KAFM,MAEA;AACL,YAAM,IAAIM,KAAJ,CACJ,CAAC,GAAGxB,iBAAiB,CAACyB,mBAAtB,EACE,CAAC,GAAGzB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,CADF,YAOK,CAAC,GAAGnB,iBAAiB,CAACsC,cAAtB,EACD,UADC,CAPL,sEAUE,CAAC,GAAGtC,iBAAiB,CAAC4B,aAAtB,EACE,UADF,EAEEV,QAFF,EAGElB,iBAAiB,CAACuC,aAHpB,CAVF,CADI,CAAN;AAkBD;AACF,GA7EmB;AAAA,CAAtB;;AA+EA3C,OAAO,CAACG,aAAR,GAAwBA,aAAxB;AACA,IAAMyC,QAAQ,GAAG;AACfV,EAAAA,OAAO,EAAE/B,aAAa,CAAC,SAAD,CADP;AAEf0C,EAAAA,YAAY,EAAE1C,aAAa,CAAC,cAAD;AAFZ,CAAjB;;AAKA,IAAMmC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACnB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,EAA4C;AACxE,MAAMwB,IAAI,GAAGpB,MAAM,KAAK,IAAX,IAAmBJ,QAAQ,CAACe,IAAT,CAAcX,MAAM,CAACZ,OAArB,CAAhC;AACA,MAAMA,OAAO,GAAGgC,IAAI,GAChB;AAAA,WACE,CAAC,GAAG1C,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,wBAAD,EAA2BzB,QAA3B,CAPd,IAQCI,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACd,UAA1B,GACGoC,cAAc,CACZ,wBADY,EAEZtB,MAFY,EAGZ,SAHY,EAIZJ,QAJY,CAAd,GAKI2B,WAAW,CAACvB,MAAD,CANlB,GAOGsB,cAAc,CAAC,wBAAD,EAA2BtB,MAA3B,EAAmC,OAAnC,CAflB,CADF;AAAA,GADgB,GAkBhB;AAAA,WACE,CAAC,GAAGtB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,oBAAD,EAAuBzB,QAAvB,CAPd,IAQCI,MAAM,KAAK,IAAX,GACG,OAAOjB,aADV,GAEGiB,MAAM,CAACd,UAAP,GACAoC,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,SAA/B,CAAd,GACAuB,WAAW,CAACvB,MAAD,CAFX,GAGAsB,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,OAA/B,CAblB,CADF;AAAA,GAlBJ;AAiCA,SAAO;AACLZ,IAAAA,OAAO,EAAPA,OADK;AAELgC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CAvCD;;AAyCA,IAAMN,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACrB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,EAA4C;AAC5E,MAAMwB,IAAI,GAAGpB,MAAM,KAAK,IAAX,IAAmBJ,QAAQ,CAACiB,eAAT,CAAyBb,MAAM,CAACzB,KAAhC,CAAhC;AACA,MAAMa,OAAO,GAAGgC,IAAI,GAChB;AAAA,WACE,CAAC,GAAG1C,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,mCAAD,EAAsCzB,QAAtC,CAPd,GAQA,IARA,IASCI,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACd,UAA1B,GACGoC,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,MAA/B,CAAd,GACAsB,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,SAA/B,CADd,GAEAuB,WAAW,CAACvB,MAAD,CAHd,GAIGsB,cAAc,CAAC,gBAAD,EAAmBtB,MAAnB,EAA2B,OAA3B,CAblB,CADF;AAAA,GADgB,GAgBhB;AAAA,WACE,CAAC,GAAGtB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,+BAAD,EAAkCzB,QAAlC,CAPd,GAQA,IARA,IASCI,MAAM,KAAK,IAAX,GACGjB,aADH,GAEGiB,MAAM,CAACd,UAAP,GACAoC,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,MAA/B,CAAd,GACAsB,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,SAA/B,CADd,GAEAuB,WAAW,CAACvB,MAAD,CAHX,GAIAsB,cAAc,CAAC,gBAAD,EAAmBtB,MAAnB,EAA2B,OAA3B,CAflB,CADF;AAAA,GAhBJ;AAiCA,SAAO;AACLZ,IAAAA,OAAO,EAAPA,OADK;AAELgC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CAvCD;;AAyCA,IAAML,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACtB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,EAA4C;AACxE,MAAMwB,IAAI,GAAGpB,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACZ,OAAP,KAAmBQ,QAAQ,CAACR,OAA5D;AACA,MAAMA,OAAO,GAAGgC,IAAI,GAChB;AAAA,WACE,CAAC,GAAG1C,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,wBAAD,EAA2BzB,QAAQ,CAACR,OAApC,CAPd,IAQCY,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACd,UAA1B,GACGqC,WAAW,CAACvB,MAAD,CADd,GAEGsB,cAAc,CAAC,wBAAD,EAA2BtB,MAA3B,EAAmC,OAAnC,CAVlB,CADF;AAAA,GADgB,GAahB;AAAA,WACE,CAAC,GAAGtB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,IAOCG,MAAM,KAAK,IAAX,GACGqB,cAAc,CAAC,oBAAD,EAAuBzB,QAAQ,CAACR,OAAhC,CAAd,GACA,IADA,GAEAL,aAHH,GAIGiB,MAAM,CAACd,UAAP,GACA,CAAC,GAAGR,iBAAiB,CAAC8C,oBAAtB,EACE5B,QAAQ,CAACR,OADX,EAEEY,MAAM,CAACZ,OAFT,EAGE,kBAHF,EAIE,kBAJF,EAKE,IALF,IAOA,IAPA,GAQAmC,WAAW,CAACvB,MAAD,CATX,GAUAqB,cAAc,CAAC,oBAAD,EAAuBzB,QAAQ,CAACR,OAAhC,CAAd,GACAkC,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,OAA/B,CAtBlB,CADF;AAAA,GAbJ;AAqCA,SAAO;AACLZ,IAAAA,OAAO,EAAPA,OADK;AAELgC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CA3CD;;AA6CA,IAAMX,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAChB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,EAA4C;AACvE,MAAMwB,IAAI,GAAGpB,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACzB,KAAP,YAAwBqB,QAAxD;AACA,MAAMR,OAAO,GAAGgC,IAAI,GAChB;AAAA,WACE,CAAC,GAAG1C,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOA,CAAC,GAAGhB,MAAM,CAAC4C,+BAAX,EACE,sBADF,EAEE7B,QAFF,CAPA,IAWCI,MAAM,KAAK,IAAX,IACDA,MAAM,CAACzB,KAAP,IAAgB,IADf,IAED,OAAOyB,MAAM,CAACzB,KAAP,CAAamD,WAApB,KAAoC,UAFnC,IAGD1B,MAAM,CAACzB,KAAP,CAAamD,WAAb,KAA6B9B,QAH5B,GAIG,CAAC,GAAGf,MAAM,CAAC8C,+BAAX,EACE,sBADF,EAEE3B,MAAM,CAACzB,KAAP,CAAamD,WAFf,EAGE9B,QAHF,CAJH,GASG,EApBJ,IAqBA,IArBA,IAsBCI,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACd,UAA1B,GACGoC,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,SAA/B,CAAd,GACAuB,WAAW,CAACvB,MAAD,CAFd,GAGGsB,cAAc,CAAC,kBAAD,EAAqBtB,MAArB,EAA6B,OAA7B,CAzBlB,CADF;AAAA,GADgB,GA4BhB;AAAA,WACE,CAAC,GAAGtB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOA,CAAC,GAAGhB,MAAM,CAAC+C,4BAAX,EACE,sBADF,EAEEhC,QAFF,CAPA,IAWCI,MAAM,KAAK,IAAX,GACG,OAAOjB,aADV,GAEG,CAACiB,MAAM,CAACzB,KAAP,IAAgB,IAAhB,IACD,OAAOyB,MAAM,CAACzB,KAAP,CAAamD,WAApB,KAAoC,UADnC,GAEG,CAAC,GAAG7C,MAAM,CAACgD,4BAAX,EACE,sBADF,EAEE7B,MAAM,CAACzB,KAAP,CAAamD,WAFf,CAFH,GAMG,EANJ,IAOA,IAPA,IAQC1B,MAAM,CAACd,UAAP,GACGoC,cAAc,CAAC,oBAAD,EAAuBtB,MAAvB,EAA+B,SAA/B,CAAd,GACAuB,WAAW,CAACvB,MAAD,CAFd,GAGGsB,cAAc,CAAC,kBAAD,EAAqBtB,MAArB,EAA6B,OAA7B,CAXlB,CAbJ,CADF;AAAA,GA5BJ;AAsDA,SAAO;AACLZ,IAAAA,OAAO,EAAPA,OADK;AAELgC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CA5DD;;AA8DA,IAAMV,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACjB,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAA+BJ,QAA/B,EAA4C;AACxE,MAAMwB,IAAI,GAAGpB,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACZ,OAAP,CAAe0C,QAAf,CAAwBlC,QAAxB,CAAhC;AACA,MAAMR,OAAO,GAAGgC,IAAI,GAChB;AAAA,WACE,CAAC,GAAG1C,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,0BAAD,EAA6BzB,QAA7B,CAPd,IAQCI,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACd,UAA1B,GACGoC,cAAc,CACZ,0BADY,EAEZtB,MAFY,EAGZ,SAHY,EAIZJ,QAJY,CAAd,GAKI2B,WAAW,CAACvB,MAAD,CANlB,GAOGsB,cAAc,CAAC,0BAAD,EAA6BtB,MAA7B,EAAqC,OAArC,CAflB,CADF;AAAA,GADgB,GAkBhB;AAAA,WACE,CAAC,GAAGtB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGEA,SAHF,EAIEU,OAJF,IAMA,MANA,GAOAwB,cAAc,CAAC,sBAAD,EAAyBzB,QAAzB,CAPd,IAQCI,MAAM,KAAK,IAAX,GACG,OAAOjB,aADV,GAEGiB,MAAM,CAACd,UAAP,GACAoC,cAAc,CAAC,sBAAD,EAAyBtB,MAAzB,EAAiC,SAAjC,CAAd,GACAuB,WAAW,CAACvB,MAAD,CAFX,GAGAsB,cAAc,CAAC,sBAAD,EAAyBtB,MAAzB,EAAiC,OAAjC,CAblB,CADF;AAAA,GAlBJ;AAiCA,SAAO;AACLZ,IAAAA,OAAO,EAAPA,OADK;AAELgC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CAvCD;;AAyCA,IAAMZ,OAAO,GAAG,SAAVA,OAAU,CAACf,WAAD,EAAcI,OAAd,EAAuBG,MAAvB,EAAkC;AAChD,MAAMoB,IAAI,GAAGpB,MAAM,KAAK,IAAxB;AACA,MAAMZ,OAAO,GAAGgC,IAAI,GAChB;AAAA,WACE,CAAC,GAAG1C,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGE,EAHF,EAIEU,OAJF,IAMA,MANA,IAOCG,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACd,UAA1B,GACGoC,cAAc,CAAC,iBAAD,EAAoBtB,MAApB,EAA4B,MAA5B,CAAd,GACAsB,cAAc,CAAC,iBAAD,EAAoBtB,MAApB,EAA4B,SAA5B,CADd,GAEAuB,WAAW,CAACvB,MAAD,CAHd,GAIGsB,cAAc,CAAC,gBAAD,EAAmBtB,MAAnB,EAA2B,OAA3B,CAXlB,CADF;AAAA,GADgB,GAchB;AAAA,WACE,CAAC,GAAGtB,iBAAiB,CAAC0B,WAAtB,EACEX,WADF,EAEEN,SAFF,EAGE,EAHF,EAIEU,OAJF,IAMA,MANA,GAOAd,aARF;AAAA,GAdJ;AAuBA,SAAO;AACLK,IAAAA,OAAO,EAAPA,OADK;AAELgC,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CA7BD;;AA+BA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACU,KAAD,EAAQnC,QAAR;AAAA,SACrBmC,KAAK,GAAG,CAAC,GAAGrD,iBAAiB,CAACuC,aAAtB,EAAqCrB,QAArC,CAAR,GAAyD,IADpC;AAAA,CAAvB;;AAGA,IAAM0B,cAAc,GAAG,SAAjBA,cAAiB,CAACS,KAAD,EAAQ/B,MAAR,EAAgBgC,GAAhB,EAAqBpC,QAArB,EAAkC;AACvD,MAAII,MAAM,KAAK,IAAf,EAAqB;AACnB,WAAO,EAAP;AACD;;AAED,MAAIgC,GAAG,KAAK,SAAZ,EAAuB;AACrB,QAAM5C,OAAO,GAAGY,MAAM,CAACZ,OAAvB;;AAEA,QAAI,OAAOQ,QAAP,KAAoB,QAAxB,EAAkC;AAChC,UAAMqC,KAAK,GAAG7C,OAAO,CAAC8C,OAAR,CAAgBtC,QAAhB,CAAd;;AAEA,UAAIqC,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,eACEF,KAAK,GACL,CAAC,GAAGlD,MAAM,CAACsD,2CAAX,EACE/C,OADF,EAEE6C,KAFF,EAGErC,QAAQ,CAACwC,MAHX,CADA,GAMA,IAPF;AASD;AACF,KAdD,MAcO,IAAIxC,QAAQ,YAAYyC,MAAxB,EAAgC;AACrC,aACEN,KAAK,GACL,CAAC,GAAGlD,MAAM,CAACyD,wCAAX,EACElD,OADF,EAEE,OAAOQ,QAAQ,CAAC2C,IAAhB,KAAyB,UAAzB,GAAsC3C,QAAQ,CAAC2C,IAAT,CAAcnD,OAAd,CAAtC,GAA+D,IAFjE,CADA,GAKA,IANF;AAQD;;AAED,WAAO2C,KAAK,GAAG,CAAC,GAAGrD,iBAAiB,CAAC6B,aAAtB,EAAqCnB,OAArC,CAAR,GAAwD,IAA/D;AACD;;AAED,MAAI4C,GAAG,KAAK,MAAZ,EAAoB;AAClB,WAAOhC,MAAM,CAACT,OAAP,GACHwC,KAAK,GAAG,CAAC,GAAGrD,iBAAiB,CAAC6B,aAAtB,EAAqCP,MAAM,CAACzB,KAAP,CAAac,IAAlD,CAAR,GAAkE,IAD/D,GAEH,EAFJ;AAGD;;AAED,MAAI2C,GAAG,KAAK,OAAZ,EAAqB;AACnB,WAAOhC,MAAM,CAACT,OAAP,GACH,EADG,GAEHwC,KAAK,GAAG,CAAC,GAAGrD,iBAAiB,CAAC6B,aAAtB,EAAqCP,MAAM,CAACzB,KAA5C,CAAR,GAA6D,IAFjE;AAGD;;AAED,SAAO,EAAP;AACD,CAjDD;;AAmDA,IAAMgD,WAAW,GAAG,SAAdA,WAAc,CAAAvB,MAAM;AAAA,SACxBA,MAAM,KAAK,IAAX,IAAmB,CAACA,MAAM,CAACT,OAA3B,GACI,EADJ,GAEI,CAAC,GAAGX,gBAAgB,CAAC4D,gBAArB,EACE,CAAC,GAAG5D,gBAAgB,CAAC6D,wBAArB,EAA+CzC,MAAM,CAACzB,KAAP,CAAae,KAA5D,EACGA,KAFL,EAGE;AACEoD,IAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,EADX;AAEEC,IAAAA,SAAS,EAAE;AAFb,GAHF,EAOE;AACEC,IAAAA,YAAY,EAAE;AADhB,GAPF,CAHoB;AAAA,CAA1B;;AAeA,IAAIC,QAAQ,GAAG7B,QAAf;AACA5C,OAAO,CAACE,OAAR,GAAkBuE,QAAlB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports.default = exports.createMatcher = void 0;\n\nvar _jestMatcherUtils = require('jest-matcher-utils');\n\nvar _jestMessageUtil = require('jest-message-util');\n\nvar _print = require('./print');\n\nvar _utils = require('./utils');\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n/* eslint-disable local/ban-types-eventually */\nconst DID_NOT_THROW = 'Received function did not throw';\n\nconst getThrown = e => {\n  const hasMessage =\n    e !== null && e !== undefined && typeof e.message === 'string';\n\n  if (hasMessage && typeof e.name === 'string' && typeof e.stack === 'string') {\n    return {\n      hasMessage,\n      isError: true,\n      message: e.message,\n      value: e\n    };\n  }\n\n  return {\n    hasMessage,\n    isError: false,\n    message: hasMessage ? e.message : String(e),\n    value: e\n  };\n};\n\nconst createMatcher = (matcherName, fromPromise) =>\n  function (received, expected) {\n    const options = {\n      isNot: this.isNot,\n      promise: this.promise\n    };\n    let thrown = null;\n\n    if (fromPromise && (0, _utils.isError)(received)) {\n      thrown = getThrown(received);\n    } else {\n      if (typeof received !== 'function') {\n        if (!fromPromise) {\n          const placeholder = expected === undefined ? '' : 'expected';\n          throw new Error(\n            (0, _jestMatcherUtils.matcherErrorMessage)(\n              (0, _jestMatcherUtils.matcherHint)(\n                matcherName,\n                undefined,\n                placeholder,\n                options\n              ),\n              `${(0, _jestMatcherUtils.RECEIVED_COLOR)(\n                'received'\n              )} value must be a function`,\n              (0, _jestMatcherUtils.printWithType)(\n                'Received',\n                received,\n                _jestMatcherUtils.printReceived\n              )\n            )\n          );\n        }\n      } else {\n        try {\n          received();\n        } catch (e) {\n          thrown = getThrown(e);\n        }\n      }\n    }\n\n    if (expected === undefined) {\n      return toThrow(matcherName, options, thrown);\n    } else if (typeof expected === 'function') {\n      return toThrowExpectedClass(matcherName, options, thrown, expected);\n    } else if (typeof expected === 'string') {\n      return toThrowExpectedString(matcherName, options, thrown, expected);\n    } else if (expected !== null && typeof expected.test === 'function') {\n      return toThrowExpectedRegExp(matcherName, options, thrown, expected);\n    } else if (\n      expected !== null &&\n      typeof expected.asymmetricMatch === 'function'\n    ) {\n      return toThrowExpectedAsymmetric(matcherName, options, thrown, expected);\n    } else if (expected !== null && typeof expected === 'object') {\n      return toThrowExpectedObject(matcherName, options, thrown, expected);\n    } else {\n      throw new Error(\n        (0, _jestMatcherUtils.matcherErrorMessage)(\n          (0, _jestMatcherUtils.matcherHint)(\n            matcherName,\n            undefined,\n            undefined,\n            options\n          ),\n          `${(0, _jestMatcherUtils.EXPECTED_COLOR)(\n            'expected'\n          )} value must be a string or regular expression or class or error`,\n          (0, _jestMatcherUtils.printWithType)(\n            'Expected',\n            expected,\n            _jestMatcherUtils.printExpected\n          )\n        )\n      );\n    }\n  };\n\nexports.createMatcher = createMatcher;\nconst matchers = {\n  toThrow: createMatcher('toThrow'),\n  toThrowError: createMatcher('toThrowError')\n};\n\nconst toThrowExpectedRegExp = (matcherName, options, thrown, expected) => {\n  const pass = thrown !== null && expected.test(thrown.message);\n  const message = pass\n    ? () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected pattern: not ', expected) +\n        (thrown !== null && thrown.hasMessage\n          ? formatReceived(\n              'Received message:     ',\n              thrown,\n              'message',\n              expected\n            ) + formatStack(thrown)\n          : formatReceived('Received value:       ', thrown, 'value'))\n    : () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected pattern: ', expected) +\n        (thrown === null\n          ? '\\n' + DID_NOT_THROW\n          : thrown.hasMessage\n          ? formatReceived('Received message: ', thrown, 'message') +\n            formatStack(thrown)\n          : formatReceived('Received value:   ', thrown, 'value'));\n  return {\n    message,\n    pass\n  };\n};\n\nconst toThrowExpectedAsymmetric = (matcherName, options, thrown, expected) => {\n  const pass = thrown !== null && expected.asymmetricMatch(thrown.value);\n  const message = pass\n    ? () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected asymmetric matcher: not ', expected) +\n        '\\n' +\n        (thrown !== null && thrown.hasMessage\n          ? formatReceived('Received name:    ', thrown, 'name') +\n            formatReceived('Received message: ', thrown, 'message') +\n            formatStack(thrown)\n          : formatReceived('Thrown value: ', thrown, 'value'))\n    : () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected asymmetric matcher: ', expected) +\n        '\\n' +\n        (thrown === null\n          ? DID_NOT_THROW\n          : thrown.hasMessage\n          ? formatReceived('Received name:    ', thrown, 'name') +\n            formatReceived('Received message: ', thrown, 'message') +\n            formatStack(thrown)\n          : formatReceived('Thrown value: ', thrown, 'value'));\n  return {\n    message,\n    pass\n  };\n};\n\nconst toThrowExpectedObject = (matcherName, options, thrown, expected) => {\n  const pass = thrown !== null && thrown.message === expected.message;\n  const message = pass\n    ? () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected message: not ', expected.message) +\n        (thrown !== null && thrown.hasMessage\n          ? formatStack(thrown)\n          : formatReceived('Received value:       ', thrown, 'value'))\n    : () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        (thrown === null\n          ? formatExpected('Expected message: ', expected.message) +\n            '\\n' +\n            DID_NOT_THROW\n          : thrown.hasMessage\n          ? (0, _jestMatcherUtils.printDiffOrStringify)(\n              expected.message,\n              thrown.message,\n              'Expected message',\n              'Received message',\n              true\n            ) +\n            '\\n' +\n            formatStack(thrown)\n          : formatExpected('Expected message: ', expected.message) +\n            formatReceived('Received value:   ', thrown, 'value'));\n  return {\n    message,\n    pass\n  };\n};\n\nconst toThrowExpectedClass = (matcherName, options, thrown, expected) => {\n  const pass = thrown !== null && thrown.value instanceof expected;\n  const message = pass\n    ? () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        (0, _print.printExpectedConstructorNameNot)(\n          'Expected constructor',\n          expected\n        ) +\n        (thrown !== null &&\n        thrown.value != null &&\n        typeof thrown.value.constructor === 'function' &&\n        thrown.value.constructor !== expected\n          ? (0, _print.printReceivedConstructorNameNot)(\n              'Received constructor',\n              thrown.value.constructor,\n              expected\n            )\n          : '') +\n        '\\n' +\n        (thrown !== null && thrown.hasMessage\n          ? formatReceived('Received message: ', thrown, 'message') +\n            formatStack(thrown)\n          : formatReceived('Received value: ', thrown, 'value'))\n    : () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        (0, _print.printExpectedConstructorName)(\n          'Expected constructor',\n          expected\n        ) +\n        (thrown === null\n          ? '\\n' + DID_NOT_THROW\n          : (thrown.value != null &&\n            typeof thrown.value.constructor === 'function'\n              ? (0, _print.printReceivedConstructorName)(\n                  'Received constructor',\n                  thrown.value.constructor\n                )\n              : '') +\n            '\\n' +\n            (thrown.hasMessage\n              ? formatReceived('Received message: ', thrown, 'message') +\n                formatStack(thrown)\n              : formatReceived('Received value: ', thrown, 'value')));\n  return {\n    message,\n    pass\n  };\n};\n\nconst toThrowExpectedString = (matcherName, options, thrown, expected) => {\n  const pass = thrown !== null && thrown.message.includes(expected);\n  const message = pass\n    ? () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected substring: not ', expected) +\n        (thrown !== null && thrown.hasMessage\n          ? formatReceived(\n              'Received message:       ',\n              thrown,\n              'message',\n              expected\n            ) + formatStack(thrown)\n          : formatReceived('Received value:         ', thrown, 'value'))\n    : () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          undefined,\n          options\n        ) +\n        '\\n\\n' +\n        formatExpected('Expected substring: ', expected) +\n        (thrown === null\n          ? '\\n' + DID_NOT_THROW\n          : thrown.hasMessage\n          ? formatReceived('Received message:   ', thrown, 'message') +\n            formatStack(thrown)\n          : formatReceived('Received value:     ', thrown, 'value'));\n  return {\n    message,\n    pass\n  };\n};\n\nconst toThrow = (matcherName, options, thrown) => {\n  const pass = thrown !== null;\n  const message = pass\n    ? () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          '',\n          options\n        ) +\n        '\\n\\n' +\n        (thrown !== null && thrown.hasMessage\n          ? formatReceived('Error name:    ', thrown, 'name') +\n            formatReceived('Error message: ', thrown, 'message') +\n            formatStack(thrown)\n          : formatReceived('Thrown value: ', thrown, 'value'))\n    : () =>\n        (0, _jestMatcherUtils.matcherHint)(\n          matcherName,\n          undefined,\n          '',\n          options\n        ) +\n        '\\n\\n' +\n        DID_NOT_THROW;\n  return {\n    message,\n    pass\n  };\n};\n\nconst formatExpected = (label, expected) =>\n  label + (0, _jestMatcherUtils.printExpected)(expected) + '\\n';\n\nconst formatReceived = (label, thrown, key, expected) => {\n  if (thrown === null) {\n    return '';\n  }\n\n  if (key === 'message') {\n    const message = thrown.message;\n\n    if (typeof expected === 'string') {\n      const index = message.indexOf(expected);\n\n      if (index !== -1) {\n        return (\n          label +\n          (0, _print.printReceivedStringContainExpectedSubstring)(\n            message,\n            index,\n            expected.length\n          ) +\n          '\\n'\n        );\n      }\n    } else if (expected instanceof RegExp) {\n      return (\n        label +\n        (0, _print.printReceivedStringContainExpectedResult)(\n          message,\n          typeof expected.exec === 'function' ? expected.exec(message) : null\n        ) +\n        '\\n'\n      );\n    }\n\n    return label + (0, _jestMatcherUtils.printReceived)(message) + '\\n';\n  }\n\n  if (key === 'name') {\n    return thrown.isError\n      ? label + (0, _jestMatcherUtils.printReceived)(thrown.value.name) + '\\n'\n      : '';\n  }\n\n  if (key === 'value') {\n    return thrown.isError\n      ? ''\n      : label + (0, _jestMatcherUtils.printReceived)(thrown.value) + '\\n';\n  }\n\n  return '';\n};\n\nconst formatStack = thrown =>\n  thrown === null || !thrown.isError\n    ? ''\n    : (0, _jestMessageUtil.formatStackTrace)(\n        (0, _jestMessageUtil.separateMessageFromStack)(thrown.value.stack)\n          .stack,\n        {\n          rootDir: process.cwd(),\n          testMatch: []\n        },\n        {\n          noStackTrace: false\n        }\n      );\n\nvar _default = matchers;\nexports.default = _default;\n"]},"metadata":{},"sourceType":"script"}