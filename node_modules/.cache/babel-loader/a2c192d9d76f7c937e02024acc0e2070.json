{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extend = require(\"extend\");\n\nvar utils_1 = require(\"../utils\");\n\nvar authenticator_1 = require(\"./authenticator\");\n/**\n * The BasicAuthenticator is used to add basic authentication information to\n *   requests.\n *\n * Basic Authorization will be sent as an Authorization header in the form:\n *\n *     Authorization: Basic <encoded username and password>\n *\n */\n\n\nvar BasicAuthenticator =\n/** @class */\nfunction (_super) {\n  __extends(BasicAuthenticator, _super);\n  /**\n   * Create a new BasicAuthenticator instance.\n   *\n   * @param {object} options Configuration options for basic authentication.\n   * @param {string} options.username The username portion of basic authentication.\n   * @param {string} options.password The password portion of basic authentication.\n   * @throws {Error} The configuration options are not valid.\n   */\n\n\n  function BasicAuthenticator(options) {\n    var _this = _super.call(this) || this;\n\n    _this.requiredOptions = ['username', 'password'];\n    utils_1.validateInput(options, _this.requiredOptions);\n    var username = options.username,\n        password = options.password;\n    var authHeaderString = utils_1.computeBasicAuthHeader(username, password);\n    _this.authHeader = {\n      Authorization: authHeaderString\n    };\n    return _this;\n  }\n  /**\n   * Add basic authentication information to `request`. The basic authentication information\n   * will be set in the Authorization property of`request.headers` in the form:\n   *\n   *     Authorization: Basic <encoded username and password>\n   *\n   * @param {object} requestOptions - The request to augment with authentication information.\n   * @param {object.<string, string>} requestOptions.headers - The headers the\n   *   authentication information will be added too.\n   */\n\n\n  BasicAuthenticator.prototype.authenticate = function (requestOptions) {\n    var _this = this;\n\n    return new Promise(function (resolve) {\n      requestOptions.headers = extend(true, {}, requestOptions.headers, _this.authHeader);\n      resolve();\n    });\n  };\n\n  return BasicAuthenticator;\n}(authenticator_1.Authenticator);\n\nexports.BasicAuthenticator = BasicAuthenticator;","map":{"version":3,"sources":["/Users/sudesh/Documents/DEV2021/wacode/discovery-components/node_modules/ibm-cloud-sdk-core/auth/authenticators/basic-authenticator.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","extend","require","utils_1","authenticator_1","BasicAuthenticator","_super","options","_this","call","requiredOptions","validateInput","username","password","authHeaderString","computeBasicAuthHeader","authHeader","Authorization","authenticate","requestOptions","Promise","resolve","headers","Authenticator"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extend = require(\"extend\");\nvar utils_1 = require(\"../utils\");\nvar authenticator_1 = require(\"./authenticator\");\n/**\n * The BasicAuthenticator is used to add basic authentication information to\n *   requests.\n *\n * Basic Authorization will be sent as an Authorization header in the form:\n *\n *     Authorization: Basic <encoded username and password>\n *\n */\nvar BasicAuthenticator = /** @class */ (function (_super) {\n    __extends(BasicAuthenticator, _super);\n    /**\n     * Create a new BasicAuthenticator instance.\n     *\n     * @param {object} options Configuration options for basic authentication.\n     * @param {string} options.username The username portion of basic authentication.\n     * @param {string} options.password The password portion of basic authentication.\n     * @throws {Error} The configuration options are not valid.\n     */\n    function BasicAuthenticator(options) {\n        var _this = _super.call(this) || this;\n        _this.requiredOptions = ['username', 'password'];\n        utils_1.validateInput(options, _this.requiredOptions);\n        var username = options.username, password = options.password;\n        var authHeaderString = utils_1.computeBasicAuthHeader(username, password);\n        _this.authHeader = { Authorization: authHeaderString };\n        return _this;\n    }\n    /**\n     * Add basic authentication information to `request`. The basic authentication information\n     * will be set in the Authorization property of`request.headers` in the form:\n     *\n     *     Authorization: Basic <encoded username and password>\n     *\n     * @param {object} requestOptions - The request to augment with authentication information.\n     * @param {object.<string, string>} requestOptions.headers - The headers the\n     *   authentication information will be added too.\n     */\n    BasicAuthenticator.prototype.authenticate = function (requestOptions) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            requestOptions.headers = extend(true, {}, requestOptions.headers, _this.authHeader);\n            resolve();\n        });\n    };\n    return BasicAuthenticator;\n}(authenticator_1.Authenticator));\nexports.BasicAuthenticator = BasicAuthenticator;\n"]},"metadata":{},"sourceType":"script"}