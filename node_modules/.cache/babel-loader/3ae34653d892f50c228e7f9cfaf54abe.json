{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Base Authenticator class for other Authenticators to extend. Not intended\n * to be used as a stand-alone authenticator.\n */\n\nvar Authenticator =\n/** @class */\nfunction () {\n  /**\n   * Create a new Authenticator instance.\n   *\n   * @throws {Error} The `new` keyword was not used to create construct the\n   *   authenticator.\n   */\n  function Authenticator() {\n    if (!(this instanceof Authenticator)) {\n      throw new Error('the \"new\" keyword is required to create authenticator instances');\n    }\n  }\n  /**\n   * Augment the request with authentication information.\n   *\n   * @param {object} requestOptions - The request to augment with authentication information.\n   * @param {object.<string, string>} requestOptions.headers - The headers the\n   *   authentication information will be added too.\n   * @throws {Error} - The authenticate method was not implemented by a\n   *   subclass.\n   */\n\n\n  Authenticator.prototype.authenticate = function (requestOptions) {\n    var error = new Error('Should be implemented by subclass!');\n    return Promise.reject(error);\n  };\n\n  return Authenticator;\n}();\n\nexports.Authenticator = Authenticator;","map":{"version":3,"sources":["/Users/sudesh/Documents/DEV2021/wacode/discovery-components/node_modules/ibm-cloud-sdk-core/auth/authenticators/authenticator.js"],"names":["Object","defineProperty","exports","value","Authenticator","Error","prototype","authenticate","requestOptions","error","Promise","reject"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;AACA;AACA;AACA;;AACA,IAAIC,aAAa;AAAG;AAAe,YAAY;AAC3C;AACJ;AACA;AACA;AACA;AACA;AACI,WAASA,aAAT,GAAyB;AACrB,QAAI,EAAE,gBAAgBA,aAAlB,CAAJ,EAAsC;AAClC,YAAM,IAAIC,KAAJ,CAAU,iEAAV,CAAN;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACID,EAAAA,aAAa,CAACE,SAAd,CAAwBC,YAAxB,GAAuC,UAAUC,cAAV,EAA0B;AAC7D,QAAIC,KAAK,GAAG,IAAIJ,KAAJ,CAAU,oCAAV,CAAZ;AACA,WAAOK,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,GAHD;;AAIA,SAAOL,aAAP;AACH,CA1BkC,EAAnC;;AA2BAF,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Base Authenticator class for other Authenticators to extend. Not intended\n * to be used as a stand-alone authenticator.\n */\nvar Authenticator = /** @class */ (function () {\n    /**\n     * Create a new Authenticator instance.\n     *\n     * @throws {Error} The `new` keyword was not used to create construct the\n     *   authenticator.\n     */\n    function Authenticator() {\n        if (!(this instanceof Authenticator)) {\n            throw new Error('the \"new\" keyword is required to create authenticator instances');\n        }\n    }\n    /**\n     * Augment the request with authentication information.\n     *\n     * @param {object} requestOptions - The request to augment with authentication information.\n     * @param {object.<string, string>} requestOptions.headers - The headers the\n     *   authentication information will be added too.\n     * @throws {Error} - The authenticate method was not implemented by a\n     *   subclass.\n     */\n    Authenticator.prototype.authenticate = function (requestOptions) {\n        var error = new Error('Should be implemented by subclass!');\n        return Promise.reject(error);\n    };\n    return Authenticator;\n}());\nexports.Authenticator = Authenticator;\n"]},"metadata":{},"sourceType":"script"}