{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.translationIds = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _defaultTranslations;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar prefix = _carbonComponents.settings.prefix;\nvar translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nexports.translationIds = translationIds;\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['close.menu'], 'Close menu'), _defineProperty(_defaultTranslations, translationIds['open.menu'], 'Open menu'), _defaultTranslations);\n/**\n * `ListBoxMenuIcon` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\n\nvar ListBoxMenuIcon = function ListBoxMenuIcon(_ref) {\n  var isOpen = _ref.isOpen,\n      t = _ref.translateWithId;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--list-box__menu-icon\"), _defineProperty({}, \"\".concat(prefix, \"--list-box__menu-icon--open\"), isOpen));\n  var description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronDown16, {\n    name: \"chevron--down\",\n    \"aria-label\": description\n  }, /*#__PURE__*/_react.default.createElement(\"title\", null, description)));\n};\n\nListBoxMenuIcon.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: _propTypes.default.bool.isRequired,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: _propTypes.default.func.isRequired\n};\nListBoxMenuIcon.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nvar _default = ListBoxMenuIcon;\nexports.default = _default;","map":{"version":3,"sources":["/Users/sudesh/Documents/DEV2021/wacode/discovery-components-web/node_modules/carbon-components-react/lib/components/ListBox/ListBoxMenuIcon.js"],"names":["Object","defineProperty","exports","value","default","translationIds","_classnames","_interopRequireDefault","require","_react","_propTypes","_iconsReact","_carbonComponents","_defaultTranslations","obj","__esModule","_defineProperty","key","enumerable","configurable","writable","prefix","settings","defaultTranslations","ListBoxMenuIcon","_ref","isOpen","t","translateWithId","className","concat","description","createElement","ChevronDown16","name","propTypes","bool","isRequired","func","defaultProps","id","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.translationIds = void 0;\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _iconsReact = require(\"@carbon/icons-react\");\n\nvar _carbonComponents = require(\"carbon-components\");\n\nvar _defaultTranslations;\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar prefix = _carbonComponents.settings.prefix;\nvar translationIds = {\n  'close.menu': 'close.menu',\n  'open.menu': 'open.menu'\n};\nexports.translationIds = translationIds;\nvar defaultTranslations = (_defaultTranslations = {}, _defineProperty(_defaultTranslations, translationIds['close.menu'], 'Close menu'), _defineProperty(_defaultTranslations, translationIds['open.menu'], 'Open menu'), _defaultTranslations);\n/**\n * `ListBoxMenuIcon` is used to orient the icon up or down depending on the\n * state of the menu for a given `ListBox`\n */\n\nvar ListBoxMenuIcon = function ListBoxMenuIcon(_ref) {\n  var isOpen = _ref.isOpen,\n      t = _ref.translateWithId;\n  var className = (0, _classnames.default)(\"\".concat(prefix, \"--list-box__menu-icon\"), _defineProperty({}, \"\".concat(prefix, \"--list-box__menu-icon--open\"), isOpen));\n  var description = isOpen ? t('close.menu') : t('open.menu');\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    className: className\n  }, /*#__PURE__*/_react.default.createElement(_iconsReact.ChevronDown16, {\n    name: \"chevron--down\",\n    \"aria-label\": description\n  }, /*#__PURE__*/_react.default.createElement(\"title\", null, description)));\n};\n\nListBoxMenuIcon.propTypes = {\n  /**\n   * Specify whether the menu is currently open, which will influence the\n   * direction of the menu icon\n   */\n  isOpen: _propTypes.default.bool.isRequired,\n\n  /**\n   * i18n hook used to provide the appropriate description for the given menu\n   * icon. This function takes in an id defined in `translationIds` and should\n   * return a string message for that given message id.\n   */\n  translateWithId: _propTypes.default.func.isRequired\n};\nListBoxMenuIcon.defaultProps = {\n  translateWithId: function translateWithId(id) {\n    return defaultTranslations[id];\n  }\n};\nvar _default = ListBoxMenuIcon;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}