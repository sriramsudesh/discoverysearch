{"ast":null,"code":"\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar extend = require(\"extend\");\n\nvar utils_1 = require(\"../utils\");\n\nvar jwt_token_manager_1 = require(\"./jwt-token-manager\");\n/**\n * Token Manager of CloudPak for data.\n *\n * The Token Manager performs basic auth with a username and password\n * to acquire CP4D tokens.\n */\n\n\nvar Cp4dTokenManager =\n/** @class */\nfunction (_super) {\n  __extends(Cp4dTokenManager, _super);\n  /**\n   * Create a new [[Cp4dTokenManager]] instance.\n   *\n   * @param {object} options Configuration options.\n   * @param {string} options.username The username portion of basic authentication.\n   * @param {string} options.password The password portion of basic authentication.\n   * @param {string} options.url The endpoint for CP4D token requests.\n   * @param {boolean} [options.disableSslVerification] A flag that indicates\n   *   whether verification of the token server's SSL certificate should be\n   *   disabled or not.\n   * @param {object<string, string>} [options.headers] Headers to be sent with every\n   *   outbound HTTP requests to token services.\n   * @constructor\n   */\n\n\n  function Cp4dTokenManager(options) {\n    var _this = _super.call(this, options) || this;\n\n    _this.requiredOptions = ['username', 'password', 'url'];\n    _this.tokenName = 'accessToken';\n    utils_1.validateInput(options, _this.requiredOptions);\n    var tokenApiPath = '/v1/preauth/validateAuth'; // do not append the path if user already has\n\n    if (_this.url && !_this.url.endsWith(tokenApiPath)) {\n      _this.url = _this.url + tokenApiPath;\n    }\n\n    _this.username = options.username;\n    _this.password = options.password;\n    return _this;\n  }\n\n  Cp4dTokenManager.prototype.requestToken = function () {\n    // these cannot be overwritten\n    var requiredHeaders = {\n      Authorization: utils_1.computeBasicAuthHeader(this.username, this.password)\n    };\n    var parameters = {\n      options: {\n        url: this.url,\n        method: 'GET',\n        headers: extend(true, {}, this.headers, requiredHeaders),\n        rejectUnauthorized: !this.disableSslVerification\n      }\n    };\n    return this.requestWrapperInstance.sendRequest(parameters);\n  };\n\n  return Cp4dTokenManager;\n}(jwt_token_manager_1.JwtTokenManager);\n\nexports.Cp4dTokenManager = Cp4dTokenManager;","map":{"version":3,"sources":["/Users/sudesh/Documents/DEV2021/wacode/discovery-components-web/node_modules/ibm-cloud-sdk-core/auth/token-managers/cp4d-token-manager.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","defineProperty","exports","value","extend","require","utils_1","jwt_token_manager_1","Cp4dTokenManager","_super","options","_this","call","requiredOptions","tokenName","validateInput","tokenApiPath","url","endsWith","username","password","requestToken","requiredHeaders","Authorization","computeBasicAuthHeader","parameters","method","headers","rejectUnauthorized","disableSslVerification","requestWrapperInstance","sendRequest","JwtTokenManager"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * Copyright 2019 IBM Corp. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar extend = require(\"extend\");\nvar utils_1 = require(\"../utils\");\nvar jwt_token_manager_1 = require(\"./jwt-token-manager\");\n/**\n * Token Manager of CloudPak for data.\n *\n * The Token Manager performs basic auth with a username and password\n * to acquire CP4D tokens.\n */\nvar Cp4dTokenManager = /** @class */ (function (_super) {\n    __extends(Cp4dTokenManager, _super);\n    /**\n     * Create a new [[Cp4dTokenManager]] instance.\n     *\n     * @param {object} options Configuration options.\n     * @param {string} options.username The username portion of basic authentication.\n     * @param {string} options.password The password portion of basic authentication.\n     * @param {string} options.url The endpoint for CP4D token requests.\n     * @param {boolean} [options.disableSslVerification] A flag that indicates\n     *   whether verification of the token server's SSL certificate should be\n     *   disabled or not.\n     * @param {object<string, string>} [options.headers] Headers to be sent with every\n     *   outbound HTTP requests to token services.\n     * @constructor\n     */\n    function Cp4dTokenManager(options) {\n        var _this = _super.call(this, options) || this;\n        _this.requiredOptions = ['username', 'password', 'url'];\n        _this.tokenName = 'accessToken';\n        utils_1.validateInput(options, _this.requiredOptions);\n        var tokenApiPath = '/v1/preauth/validateAuth';\n        // do not append the path if user already has\n        if (_this.url && !_this.url.endsWith(tokenApiPath)) {\n            _this.url = _this.url + tokenApiPath;\n        }\n        _this.username = options.username;\n        _this.password = options.password;\n        return _this;\n    }\n    Cp4dTokenManager.prototype.requestToken = function () {\n        // these cannot be overwritten\n        var requiredHeaders = {\n            Authorization: utils_1.computeBasicAuthHeader(this.username, this.password),\n        };\n        var parameters = {\n            options: {\n                url: this.url,\n                method: 'GET',\n                headers: extend(true, {}, this.headers, requiredHeaders),\n                rejectUnauthorized: !this.disableSslVerification,\n            }\n        };\n        return this.requestWrapperInstance.sendRequest(parameters);\n    };\n    return Cp4dTokenManager;\n}(jwt_token_manager_1.JwtTokenManager));\nexports.Cp4dTokenManager = Cp4dTokenManager;\n"]},"metadata":{},"sourceType":"script"}